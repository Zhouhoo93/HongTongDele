//
//  PrefixHeader.pch
//  cameraProject
//
//  Created by Zhouhoo on 16/12/19.
//  Copyright © 2016年 ziHou. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

#import "Masonry.h"
#import "SDWebImageManager.h"
#import "AFNetworking.h"
#import "HSingleGlobalData.h"
#import "MBProgressHUD.h"
#import "UIImage+extension.h"
#import "UIView+Extension.h"
#import "IQKeyboardManager.h"
#import <UIView+Toast.h>
// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.

//--------接口地址--------
//#define kUrl @"http://118.178.126.25"
#define kUrl @"http://aipv6.xinyuntec.com"


#define KWidth [UIScreen mainScreen].bounds.size.width
#define KHeight [UIScreen mainScreen].bounds.size.height
#define RGBColor(r, g, b) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:1.0]
#define isValid(str) ((str!=nil) && (str!=NULL) && (![str isKindOfClass:[NSNull class]]))



//// 判断是否为iOS8
#define iOS8 ([[UIDevice currentDevice].systemVersion doubleValue] >= 8.0)
//判断是什么型号的手机
#define iPhone6 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? (CGSizeEqualToSize(CGSizeMake(750, 1334), [[UIScreen mainScreen] currentMode].size) || CGSizeEqualToSize(CGSizeMake(640, 1136), [[UIScreen mainScreen] currentMode].size)) : NO)

#define iPhone6P ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? (CGSizeEqualToSize(CGSizeMake(1125, 2001), [[UIScreen mainScreen] currentMode].size) || CGSizeEqualToSize(CGSizeMake(1242, 2208), [[UIScreen mainScreen] currentMode].size)) : NO)
//适配比例
#define kWidthRate [[UIScreen mainScreen] bounds].size.width/320.0
#define kHeighRate [[UIScreen mainScreen] bounds].size.height/568.0
//判断是否 Retina屏、设备是否%fhone 5、是否是iPad
#define iPhone4 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 960), [[UIScreen mainScreen] currentMode].size) : NO)
#define iPhone5 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 1136), [[UIScreen mainScreen] currentMode].size) : NO)
#define iOS9 ([[UIDevice currentDevice].systemVersion doubleValue] >= 9.0)

#ifdef DEBUG
#define NSLog(FORMAT, ...) fprintf(stderr,"📌[%s:%d] %s\n",[[[NSString stringWithUTF8String:__FILE__] lastPathComponent] UTF8String], __LINE__, [[NSString stringWithFormat:FORMAT, ##__VA_ARGS__] UTF8String]);
#else
#define NSLog(FORMAT, ...) nil
#endif



//日志输出宏定义
#ifdef DEBUG
// 调试状态
#define MyLog(...) NSLog(__VA_ARGS__)
#else
// 发布状态
#define MyLog(...)
#endif



//屏幕宽
#define screenW [UIScreen mainScreen].bounds.size.width
//屏幕高
#define screenH [UIScreen mainScreen].bounds.size.height

/*topbar*/
//输入框的高度
static CGFloat const TextViewH = 36.5;
//键盘切换按钮的宽度
static CGFloat const emotionBtnW = 36.5;
//键盘切换按钮的高度
static CGFloat const emotionBtnH = 36.5;
//顶部工具条的高度
#define topBarH   TextViewH - 10
//输入框的宽度
#define TextViewW screenW - (screenW * 55 / 320)

/*keyBoard*/
//键盘变化时间
static CGFloat const keyBoardTipTime = 0.3;
//每一页的按钮数，包括删除按钮
static CGFloat const emojiCount = 21;
//每一行的按钮数
static CGFloat const KrowCount = 7;
//每一页的行数
static CGFloat const rows = 3;
//键盘高度
#define keyBoardH (4 * screenW * 0.0875 +(3 + 1) * ((screenW - 7 * screenW * 0.0875 ) / 8) + 20)
//表情按钮宽高
#define emotionW screenW * 0.0875
//表情页的高度（第一键盘高度）
#define pageH (screenW - KrowCount * emotionW) / (KrowCount + 1)


/*颜色*/
#define ColorRGB(r, g, b) [UIColor colorWithRed:(r)/255.0f green:(g)/255.0f blue:(b)/255.0f alpha:1.0f]

/*表名*/
//聊天消息表
static NSString *const tb_message = @"_message";


#endif /* PrefixHeader_pch */

//#endif /* PrefixHeader_pch */
#ifndef    weakify
#if __has_feature(objc_arc)
#define weakify(object) autoreleasepool{} __weak __typeof__(object) weak##_##object = object;
#else
#define weakify(object) autoreleasepool{} __block __typeof__(object) block##_##object = object;
#endif
#endif
#ifndef    strongify
#if __has_feature(objc_arc)
#define strongify(object) try{} @finally{} __typeof__(object) strong##_##object = weak##_##object;
#else
#define strongify(object) try{} @finally{} __typeof__(object) strong##_##object = block##_##object;
#endif


#define kBorderWidth 25.f
#define kBorderHeight 2.5f
#define kScreenHeight [[UIScreen mainScreen] bounds].size.height
#define kScreenWidth  [[UIScreen mainScreen] bounds].size.width
#define Size(x) ((x)*kScreenWidth/320.f)
#define kBorderColor MAIN_COLOR
#define COLOR(R,G,B,A)	[UIColor colorWithRed:(CGFloat)R/255 green:(CGFloat)G/255 blue:(CGFloat)B/255 alpha:A]
#define WHITE_COLOR	[UIColor whiteColor]
#define MAIN_COLOR COLOR(252, 174, 174, 1)

#define beginAnimation(__delay, __duration, __curve) \
[UIView beginAnimations: nil context: nil]; \
[UIView setAnimationDuration: (__duration)]; \
[UIView setAnimationCurve: (__curve)]; \
[UIView setAnimationDelay: (__delay)];


#define endAnimation \
[UIView commitAnimations];

#endif


